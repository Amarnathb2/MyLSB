//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Custom;

[assembly: RegisterDocumentType(Statistic.CLASS_NAME, typeof(Statistic))]

namespace CMS.DocumentEngine.Types.Custom
{
	/// <summary>
	/// Represents a content item of type Statistic.
	/// </summary>
	public partial class Statistic : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "custom.Statistic";


		/// <summary>
		/// The instance of the class that provides extended API for working with Statistic fields.
		/// </summary>
		private readonly StatisticFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// StatisticID.
		/// </summary>
		[DatabaseIDField]
		public int StatisticID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("StatisticID"), 0);
			}
			set
			{
				SetValue("StatisticID", value);
			}
		}


		/// <summary>
		/// Caption.
		/// </summary>
		[DatabaseField]
		public string StatisticName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("StatisticName"), @"");
			}
			set
			{
				SetValue("StatisticName", value);
			}
		}


		/// <summary>
		/// Start value.
		/// </summary>
		[DatabaseField]
		public decimal StatisticStartValue
		{
			get
			{
				return ValidationHelper.GetDecimal(GetValue("StatisticStartValue"), 0);
			}
			set
			{
				SetValue("StatisticStartValue", value);
			}
		}


		/// <summary>
		/// End value.
		/// </summary>
		[DatabaseField]
		public decimal StatisticEndValue
		{
			get
			{
				return ValidationHelper.GetDecimal(GetValue("StatisticEndValue"), 0);
			}
			set
			{
				SetValue("StatisticEndValue", value);
			}
		}


		/// <summary>
		/// Is currency.
		/// </summary>
		[DatabaseField]
		public bool StatisticIsCurrency
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("StatisticIsCurrency"), false);
			}
			set
			{
				SetValue("StatisticIsCurrency", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Statistic fields.
		/// </summary>
		[RegisterProperty]
		public StatisticFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Statistic fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class StatisticFields : AbstractHierarchicalObject<StatisticFields>
		{
			/// <summary>
			/// The content item of type Statistic that is a target of the extended API.
			/// </summary>
			private readonly Statistic mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="StatisticFields" /> class with the specified content item of type Statistic.
			/// </summary>
			/// <param name="instance">The content item of type Statistic that is a target of the extended API.</param>
			public StatisticFields(Statistic instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// StatisticID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.StatisticID;
				}
				set
				{
					mInstance.StatisticID = value;
				}
			}


			/// <summary>
			/// Caption.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.StatisticName;
				}
				set
				{
					mInstance.StatisticName = value;
				}
			}


			/// <summary>
			/// Start value.
			/// </summary>
			public decimal StartValue
			{
				get
				{
					return mInstance.StatisticStartValue;
				}
				set
				{
					mInstance.StatisticStartValue = value;
				}
			}


			/// <summary>
			/// End value.
			/// </summary>
			public decimal EndValue
			{
				get
				{
					return mInstance.StatisticEndValue;
				}
				set
				{
					mInstance.StatisticEndValue = value;
				}
			}


			/// <summary>
			/// Is currency.
			/// </summary>
			public bool IsCurrency
			{
				get
				{
					return mInstance.StatisticIsCurrency;
				}
				set
				{
					mInstance.StatisticIsCurrency = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Statistic" /> class.
		/// </summary>
		public Statistic() : base(CLASS_NAME)
		{
			mFields = new StatisticFields(this);
		}

		#endregion
	}
}