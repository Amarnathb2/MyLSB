//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Custom;

[assembly: RegisterDocumentType(Iframe.CLASS_NAME, typeof(Iframe))]

namespace CMS.DocumentEngine.Types.Custom
{
	/// <summary>
	/// Represents a content item of type Iframe.
	/// </summary>
	public partial class Iframe : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "custom.Iframe";


		/// <summary>
		/// The instance of the class that provides extended API for working with Iframe fields.
		/// </summary>
		private readonly IframeFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// IframeID.
		/// </summary>
		[DatabaseIDField]
		public int IframeID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("IframeID"), 0);
			}
			set
			{
				SetValue("IframeID", value);
			}
		}


		/// <summary>
		/// IframeName.
		/// </summary>
		[DatabaseField]
		public string IframeName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("IframeName"), @"Iframe");
			}
			set
			{
				SetValue("IframeName", value);
			}
		}


		/// <summary>
		/// Title.
		/// </summary>
		[DatabaseField]
		public string IframeTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("IframeTitle"), @"");
			}
			set
			{
				SetValue("IframeTitle", value);
			}
		}


		/// <summary>
		/// Source.
		/// </summary>
		[DatabaseField]
		public string IframeSrc
		{
			get
			{
				return ValidationHelper.GetString(GetValue("IframeSrc"), @"");
			}
			set
			{
				SetValue("IframeSrc", value);
			}
		}


		/// <summary>
		/// Height.
		/// </summary>
		[DatabaseField]
		public int IframeHeight
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("IframeHeight"), 0);
			}
			set
			{
				SetValue("IframeHeight", value);
			}
		}


		/// <summary>
		/// Width.
		/// </summary>
		[DatabaseField]
		public int IframeWidth
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("IframeWidth"), 0);
			}
			set
			{
				SetValue("IframeWidth", value);
			}
		}


		/// <summary>
		/// Transcript.
		/// </summary>
		[DatabaseField]
		public string IframeTranscript
		{
			get
			{
				return ValidationHelper.GetString(GetValue("IframeTranscript"), @"");
			}
			set
			{
				SetValue("IframeTranscript", value);
			}
		}


		/// <summary>
		/// Background Design.
		/// </summary>
		[DatabaseField]
		public string IframeBackgroundDesign
		{
			get
			{
				return ValidationHelper.GetString(GetValue("IframeBackgroundDesign"), @"");
			}
			set
			{
				SetValue("IframeBackgroundDesign", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Iframe fields.
		/// </summary>
		[RegisterProperty]
		public IframeFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Iframe fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class IframeFields : AbstractHierarchicalObject<IframeFields>
		{
			/// <summary>
			/// The content item of type Iframe that is a target of the extended API.
			/// </summary>
			private readonly Iframe mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="IframeFields" /> class with the specified content item of type Iframe.
			/// </summary>
			/// <param name="instance">The content item of type Iframe that is a target of the extended API.</param>
			public IframeFields(Iframe instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// IframeID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.IframeID;
				}
				set
				{
					mInstance.IframeID = value;
				}
			}


			/// <summary>
			/// IframeName.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.IframeName;
				}
				set
				{
					mInstance.IframeName = value;
				}
			}


			/// <summary>
			/// Title.
			/// </summary>
			public string Title
			{
				get
				{
					return mInstance.IframeTitle;
				}
				set
				{
					mInstance.IframeTitle = value;
				}
			}


			/// <summary>
			/// Source.
			/// </summary>
			public string Src
			{
				get
				{
					return mInstance.IframeSrc;
				}
				set
				{
					mInstance.IframeSrc = value;
				}
			}


			/// <summary>
			/// Height.
			/// </summary>
			public int Height
			{
				get
				{
					return mInstance.IframeHeight;
				}
				set
				{
					mInstance.IframeHeight = value;
				}
			}


			/// <summary>
			/// Width.
			/// </summary>
			public int Width
			{
				get
				{
					return mInstance.IframeWidth;
				}
				set
				{
					mInstance.IframeWidth = value;
				}
			}


			/// <summary>
			/// Transcript.
			/// </summary>
			public string Transcript
			{
				get
				{
					return mInstance.IframeTranscript;
				}
				set
				{
					mInstance.IframeTranscript = value;
				}
			}


			/// <summary>
			/// Background Design.
			/// </summary>
			public string BackgroundDesign
			{
				get
				{
					return mInstance.IframeBackgroundDesign;
				}
				set
				{
					mInstance.IframeBackgroundDesign = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Iframe" /> class.
		/// </summary>
		public Iframe() : base(CLASS_NAME)
		{
			mFields = new IframeFields(this);
		}

		#endregion
	}
}