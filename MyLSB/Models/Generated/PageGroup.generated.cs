//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Custom;

[assembly: RegisterDocumentType(PageGroup.CLASS_NAME, typeof(PageGroup))]

namespace CMS.DocumentEngine.Types.Custom
{
	/// <summary>
	/// Represents a content item of type PageGroup.
	/// </summary>
	public partial class PageGroup : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "custom.PageGroup";


		/// <summary>
		/// The instance of the class that provides extended API for working with PageGroup fields.
		/// </summary>
		private readonly PageGroupFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// PageGroupID.
		/// </summary>
		[DatabaseIDField]
		public int PageGroupID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("PageGroupID"), 0);
			}
			set
			{
				SetValue("PageGroupID", value);
			}
		}


		/// <summary>
		/// Icon.
		/// </summary>
		[DatabaseField]
		public string PageGroupIcon
		{
			get
			{
				return ValidationHelper.GetString(GetValue("PageGroupIcon"), @"");
			}
			set
			{
				SetValue("PageGroupIcon", value);
			}
		}


		/// <summary>
		/// Show in site map.
		/// </summary>
		[DatabaseField]
		public bool ShowInSitemap
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("ShowInSitemap"), true);
			}
			set
			{
				SetValue("ShowInSitemap", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with PageGroup fields.
		/// </summary>
		[RegisterProperty]
		public PageGroupFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with PageGroup fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class PageGroupFields : AbstractHierarchicalObject<PageGroupFields>
		{
			/// <summary>
			/// The content item of type PageGroup that is a target of the extended API.
			/// </summary>
			private readonly PageGroup mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="PageGroupFields" /> class with the specified content item of type PageGroup.
			/// </summary>
			/// <param name="instance">The content item of type PageGroup that is a target of the extended API.</param>
			public PageGroupFields(PageGroup instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// PageGroupID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.PageGroupID;
				}
				set
				{
					mInstance.PageGroupID = value;
				}
			}


			/// <summary>
			/// Resources.
			/// </summary>
			public IEnumerable<TreeNode> Resources
			{
				get
				{
					return mInstance.GetRelatedDocuments("PageGroupResources");
				}
			}


			/// <summary>
			/// Icon.
			/// </summary>
			public string Icon
			{
				get
				{
					return mInstance.PageGroupIcon;
				}
				set
				{
					mInstance.PageGroupIcon = value;
				}
			}


			/// <summary>
			/// Promo.
			/// </summary>
			public IEnumerable<TreeNode> Promo
			{
				get
				{
					return mInstance.GetRelatedDocuments("PageGroupPromo");
				}
			}


			/// <summary>
			/// Show in site map.
			/// </summary>
			public bool ShowInSitemap
			{
				get
				{
					return mInstance.ShowInSitemap;
				}
				set
				{
					mInstance.ShowInSitemap = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="PageGroup" /> class.
		/// </summary>
		public PageGroup() : base(CLASS_NAME)
		{
			mFields = new PageGroupFields(this);
		}

		#endregion
	}
}