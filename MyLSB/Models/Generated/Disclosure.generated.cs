//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Custom;

[assembly: RegisterDocumentType(Disclosure.CLASS_NAME, typeof(Disclosure))]

namespace CMS.DocumentEngine.Types.Custom
{
	/// <summary>
	/// Represents a content item of type Disclosure.
	/// </summary>
	public partial class Disclosure : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "custom.Disclosure";


		/// <summary>
		/// The instance of the class that provides extended API for working with Disclosure fields.
		/// </summary>
		private readonly DisclosureFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// DisclosureID.
		/// </summary>
		[DatabaseIDField]
		public int DisclosureID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("DisclosureID"), 0);
			}
			set
			{
				SetValue("DisclosureID", value);
			}
		}


		/// <summary>
		/// DisclosureName.
		/// </summary>
		[DatabaseField]
		public string DisclosureName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("DisclosureName"), @"Disclosure");
			}
			set
			{
				SetValue("DisclosureName", value);
			}
		}


		/// <summary>
		/// Text.
		/// </summary>
		[DatabaseField]
		public string DisclosureText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("DisclosureText"), @"");
			}
			set
			{
				SetValue("DisclosureText", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Disclosure fields.
		/// </summary>
		[RegisterProperty]
		public DisclosureFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Disclosure fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class DisclosureFields : AbstractHierarchicalObject<DisclosureFields>
		{
			/// <summary>
			/// The content item of type Disclosure that is a target of the extended API.
			/// </summary>
			private readonly Disclosure mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="DisclosureFields" /> class with the specified content item of type Disclosure.
			/// </summary>
			/// <param name="instance">The content item of type Disclosure that is a target of the extended API.</param>
			public DisclosureFields(Disclosure instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// DisclosureID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.DisclosureID;
				}
				set
				{
					mInstance.DisclosureID = value;
				}
			}


			/// <summary>
			/// DisclosureName.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.DisclosureName;
				}
				set
				{
					mInstance.DisclosureName = value;
				}
			}


			/// <summary>
			/// Text.
			/// </summary>
			public string Text
			{
				get
				{
					return mInstance.DisclosureText;
				}
				set
				{
					mInstance.DisclosureText = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Disclosure" /> class.
		/// </summary>
		public Disclosure() : base(CLASS_NAME)
		{
			mFields = new DisclosureFields(this);
		}

		#endregion
	}
}