//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Custom;

[assembly: RegisterDocumentType(Columns.CLASS_NAME, typeof(Columns))]

namespace CMS.DocumentEngine.Types.Custom
{
	/// <summary>
	/// Represents a content item of type Columns.
	/// </summary>
	public partial class Columns : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "custom.Columns";


		/// <summary>
		/// The instance of the class that provides extended API for working with Columns fields.
		/// </summary>
		private readonly ColumnsFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ColumnsID.
		/// </summary>
		[DatabaseIDField]
		public int ColumnsID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ColumnsID"), 0);
			}
			set
			{
				SetValue("ColumnsID", value);
			}
		}


		/// <summary>
		/// ColumnsName.
		/// </summary>
		[DatabaseField]
		public string ColumnsName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ColumnsName"), @"Columns");
			}
			set
			{
				SetValue("ColumnsName", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with Columns fields.
		/// </summary>
		[RegisterProperty]
		public ColumnsFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with Columns fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ColumnsFields : AbstractHierarchicalObject<ColumnsFields>
		{
			/// <summary>
			/// The content item of type Columns that is a target of the extended API.
			/// </summary>
			private readonly Columns mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ColumnsFields" /> class with the specified content item of type Columns.
			/// </summary>
			/// <param name="instance">The content item of type Columns that is a target of the extended API.</param>
			public ColumnsFields(Columns instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ColumnsID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ColumnsID;
				}
				set
				{
					mInstance.ColumnsID = value;
				}
			}


			/// <summary>
			/// ColumnsName.
			/// </summary>
			public string Name
			{
				get
				{
					return mInstance.ColumnsName;
				}
				set
				{
					mInstance.ColumnsName = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="Columns" /> class.
		/// </summary>
		public Columns() : base(CLASS_NAME)
		{
			mFields = new ColumnsFields(this);
		}

		#endregion
	}
}