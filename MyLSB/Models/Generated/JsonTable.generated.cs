//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at https://docs.xperience.io/.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine;
using CMS.DocumentEngine.Types.Custom;

[assembly: RegisterDocumentType(JsonTable.CLASS_NAME, typeof(JsonTable))]

namespace CMS.DocumentEngine.Types.Custom
{
	/// <summary>
	/// Represents a content item of type JsonTable.
	/// </summary>
	public partial class JsonTable : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "custom.JsonTable";


		/// <summary>
		/// The instance of the class that provides extended API for working with JsonTable fields.
		/// </summary>
		private readonly JsonTableFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// TableID.
		/// </summary>
		[DatabaseIDField]
		public int JsonTableID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("JsonTableID"), 0);
			}
			set
			{
				SetValue("JsonTableID", value);
			}
		}


		/// <summary>
		/// Table Editor.
		/// </summary>
		[DatabaseField]
		public string JSONTableEditor
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableEditor"), @"");
			}
			set
			{
				SetValue("JSONTableEditor", value);
			}
		}


		/// <summary>
		/// Check this box to style the first column as a header.
		/// </summary>
		[DatabaseField]
		public bool HeaderColumn
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("HeaderColumn"), false);
			}
			set
			{
				SetValue("HeaderColumn", value);
			}
		}


		/// <summary>
		/// Accepts space separated class names that will be applied to the entire table.
		/// </summary>
		[DatabaseField]
		public string JSONTableClass
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableClass"), @"");
			}
			set
			{
				SetValue("JSONTableClass", value);
			}
		}


		/// <summary>
		/// Accepts space separated class names that will be applied to the table's header row.
		/// </summary>
		[DatabaseField]
		public string JSONTheadClass
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTheadClass"), @"");
			}
			set
			{
				SetValue("JSONTheadClass", value);
			}
		}


		/// <summary>
		/// JSONData.
		/// </summary>
		[DatabaseField]
		public string JSONData
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONData"), @"[{ ""New Column"": ""New Row"" }]");
			}
			set
			{
				SetValue("JSONData", value);
			}
		}


		/// <summary>
		/// JSONPercentCol.
		/// </summary>
		[DatabaseField]
		public string JSONPercentCol
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONPercentCol"), @"");
			}
			set
			{
				SetValue("JSONPercentCol", value);
			}
		}


		/// <summary>
		/// Caption.
		/// </summary>
		[DatabaseField]
		public string JSONTableCaption
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableCaption"), @"");
			}
			set
			{
				SetValue("JSONTableCaption", value);
			}
		}


		/// <summary>
		/// Additional Info.
		/// </summary>
		[DatabaseField]
		public string JSONTableAdditionalInfo
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableAdditionalInfo"), @"");
			}
			set
			{
				SetValue("JSONTableAdditionalInfo", value);
			}
		}


		/// <summary>
		/// Button Text.
		/// </summary>
		[DatabaseField]
		public string JSONTableButtonText
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableButtonText"), @"");
			}
			set
			{
				SetValue("JSONTableButtonText", value);
			}
		}


		/// <summary>
		/// Button URL.
		/// </summary>
		[DatabaseField]
		public string JSONTableButtonURL
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableButtonURL"), @"");
			}
			set
			{
				SetValue("JSONTableButtonURL", value);
			}
		}


		/// <summary>
		/// Open in a new tab?.
		/// </summary>
		[DatabaseField]
		public bool JSONTableButtonNewTab
		{
			get
			{
				return ValidationHelper.GetBoolean(GetValue("JSONTableButtonNewTab"), false);
			}
			set
			{
				SetValue("JSONTableButtonNewTab", value);
			}
		}


		/// <summary>
		/// Disclosures.
		/// </summary>
		[DatabaseField]
		public string JSONTableDisclosures
		{
			get
			{
				return ValidationHelper.GetString(GetValue("JSONTableDisclosures"), @"");
			}
			set
			{
				SetValue("JSONTableDisclosures", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with JsonTable fields.
		/// </summary>
		[RegisterProperty]
		public JsonTableFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with JsonTable fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class JsonTableFields : AbstractHierarchicalObject<JsonTableFields>
		{
			/// <summary>
			/// The content item of type JsonTable that is a target of the extended API.
			/// </summary>
			private readonly JsonTable mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="JsonTableFields" /> class with the specified content item of type JsonTable.
			/// </summary>
			/// <param name="instance">The content item of type JsonTable that is a target of the extended API.</param>
			public JsonTableFields(JsonTable instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// TableID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.JsonTableID;
				}
				set
				{
					mInstance.JsonTableID = value;
				}
			}


			/// <summary>
			/// Table Editor.
			/// </summary>
			public string Editor
			{
				get
				{
					return mInstance.JSONTableEditor;
				}
				set
				{
					mInstance.JSONTableEditor = value;
				}
			}


			/// <summary>
			/// Check this box to style the first column as a header.
			/// </summary>
			public bool HeaderColumn
			{
				get
				{
					return mInstance.HeaderColumn;
				}
				set
				{
					mInstance.HeaderColumn = value;
				}
			}


			/// <summary>
			/// Accepts space separated class names that will be applied to the entire table.
			/// </summary>
			public string Class
			{
				get
				{
					return mInstance.JSONTableClass;
				}
				set
				{
					mInstance.JSONTableClass = value;
				}
			}


			/// <summary>
			/// Accepts space separated class names that will be applied to the table's header row.
			/// </summary>
			public string JSONTheadClass
			{
				get
				{
					return mInstance.JSONTheadClass;
				}
				set
				{
					mInstance.JSONTheadClass = value;
				}
			}


			/// <summary>
			/// JSONData.
			/// </summary>
			public string JSONData
			{
				get
				{
					return mInstance.JSONData;
				}
				set
				{
					mInstance.JSONData = value;
				}
			}


			/// <summary>
			/// JSONPercentCol.
			/// </summary>
			public string JSONPercentCol
			{
				get
				{
					return mInstance.JSONPercentCol;
				}
				set
				{
					mInstance.JSONPercentCol = value;
				}
			}


			/// <summary>
			/// Caption.
			/// </summary>
			public string Caption
			{
				get
				{
					return mInstance.JSONTableCaption;
				}
				set
				{
					mInstance.JSONTableCaption = value;
				}
			}


			/// <summary>
			/// Additional Info.
			/// </summary>
			public string AdditionalInfo
			{
				get
				{
					return mInstance.JSONTableAdditionalInfo;
				}
				set
				{
					mInstance.JSONTableAdditionalInfo = value;
				}
			}


			/// <summary>
			/// Button Text.
			/// </summary>
			public string ButtonText
			{
				get
				{
					return mInstance.JSONTableButtonText;
				}
				set
				{
					mInstance.JSONTableButtonText = value;
				}
			}


			/// <summary>
			/// Button URL.
			/// </summary>
			public string ButtonURL
			{
				get
				{
					return mInstance.JSONTableButtonURL;
				}
				set
				{
					mInstance.JSONTableButtonURL = value;
				}
			}


			/// <summary>
			/// Open in a new tab?.
			/// </summary>
			public bool ButtonNewTab
			{
				get
				{
					return mInstance.JSONTableButtonNewTab;
				}
				set
				{
					mInstance.JSONTableButtonNewTab = value;
				}
			}


			/// <summary>
			/// Disclosures.
			/// </summary>
			public string Disclosures
			{
				get
				{
					return mInstance.JSONTableDisclosures;
				}
				set
				{
					mInstance.JSONTableDisclosures = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="JsonTable" /> class.
		/// </summary>
		public JsonTable() : base(CLASS_NAME)
		{
			mFields = new JsonTableFields(this);
		}

		#endregion
	}
}